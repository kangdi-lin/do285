
lab authorization-secrets start
oc login -u developer -p developer https://api.ocp4.example.com:6443 # 1.1
oc new-project authorization-secrets # 1.2

oc create secret generic mysql \
--from-literal user=myuser --from-literal password=redhat123 \
--from-literal database=test_secrets --from-literal hostname=mysql # 2.1

oc new-app --name mysql \
--docker-image registry.access.redhat.com/rhscl/mysql-57-rhel7:5.7-47 # 3.1

oc get pods -w   # 3.2

oc set env deployment/mysql --from secret/mysql --prefix MYSQL_ 		# 3.3

oc set volume deployment/mysql --add --type secret \
--mount-path /run/secrets/mysql --secret-name mysql   # 3.4

oc get pods # 3.5

oc rsh mysql-854465d77c-6r7h8 # 4.1

mysql -u myuser --password=redhat123 test_secrets -e 'show databases;'   # 4.2
df -h | grep mysql  # 4.3
more /run/secrets/mysql/* # 4.4
exit # 4.5


oc new-app --name quotes --docker-image quay.io/redhattraining/famous-quotes:2.1 # 5.1
oc get pods -l deployment=quotes -w # 5.2

oc set env deployment/quotes --from secret/mysql --prefix QUOTES_  # 6.1
oc get pods -l deployment=quotes  # 6.2

oc logs quotes-c6d77f9cd-wbp9z | head -n2 # 7.1
oc expose service quotes --hostname quotes.apps.ocp4.example.com  # 7.2
oc get  route quotes  # 7.3
curl -s http://quotes.apps.ocp4.example.com/env | grep QUOTES_  # 7.4
curl -s http://quotes.apps.ocp4.example.com/status # 7.5
curl -s http://quotes.apps.ocp4.example.com/random # 7.6

oc delete project authorization-secrets # 8

lab authorization-secrets finish 
